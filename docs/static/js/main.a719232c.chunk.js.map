{"version":3,"sources":["server.js","component/SelectAccount.js","Lang.js","App.js","component/contract.js","serviceWorker.js","index.js"],"names":["host","Axios","api","bizData","pageData","callback","data","base","timestamp","sign","biz","page","axios","post","then","response","catch","error","_method","_params","id","jsonrpc","method","params","console","log","tmpPkr","Option","SelectAccount","props","handleOk","e","that","accounts","state","ac","MainPKr","selectAccount","hiddenAccount","handleCancel","onChange","v","accountOptions","this","getAccounts","pk","slice","popup","accountList","res","dataArray","i","tmpArr","acName","Name","push","value","key","formatPK","PK","setState","title","visible","onOk","onCancel","showSearch","style","width","placeholder","Component","Lang","zh_CN","project","totalSupply","contractAddress","balanceSero","balanceAsnow","rate","account","utxo","contract","swith","estimatedTotal","dayIncome","staticIncome","withdraw","detail","referId","areaId","totalInvest","profitLevel","latestTime","totalReturn","totalReturnDay","recommend","ticket","staticIncomeTips","staticIncomeTips2","investDetail","myIncome","areaTotal","areaOtherTotal","staticReward","recommendReward","nobilityReward","vipReward","viewCode","button","deposit","buy","invest","buyTicket","trigger","close","copy","modal","buyAsnow","amount","amountPlace","exchange","password","passwordPlace","amountTips","availableSERO","availableAsnow","availableExchange","total","estimate","tips","toast","lessAmount","lessTicket","lessAsnow","minInvest","tx","copySuccess","en_US","ct","address","abi","Language","Content","Header","Footer","ABI","serojs","callContract","decimal","BigNumber","pow","Countdown","window","location","dapp","name","github","author","url","logo","init","openNotificationWithIcon","type","message","desc","notification","description","wordBreak","whiteSpace","wordWrap","duration","BuyAsnowForm","create","asnow","confirmLoading","inputSero","dividedBy","toFixed","onCreate","getFieldDecorator","form","lang","setTimeout","layout","Item","label","rules","required","min","step","allowClear","autoComplete","color","React","InvestForm","estimateReturn","estimateLevel","ticketSero","ticketAsnow","times","parseFloat","sero","setFieldsValue","disabled","precision","max","staticTotal","multipliedBy","BuyTicketForm","ContentPage","currentAccount","showAccountSelect","loading","localStorage","setItem","reload","checked","showDeposit","handleBuyAsnowCancel","showBuyAsnow","handleBuyAsnowCreate","cb","formRef","validateFields","err","values","getFieldValue","executeMethod","toString","resetFields","saveBuyAsnowFormRef","handleInvestCancel","showInvest","handleInvestCreate","formRef2","amountSero","ct_rate","ct_details","comparedTo","warn","asnowBalances","calcuPrincipalProfit","seroHex","callMethod","saveInvestFormRef","handleBuyTicketCancel","showBuyTicket","handleBuyTicketCreate","formRef5","saveBuyTicketFormRef","showShareProfit","showWithdraw","modal1Visible","ct_balance_asnow","ct_id","getItem","showSelectAccount","getDetail","getRate","getContractSeroBalance","setInterval","getAccount","canvas","document","getElementById","QRCode","toCanvas","ct_balanceOfSero","accountDetail","Balance","forEach","currency","identicon","largeAreaId","largeAreaTotal","returnAmount","achievement","recommendNum","parseInt","star","isKing","balanceOfAsnow","detailsOfIncome","calcuStaticProfit","length","point","args","packData","callParams","from","to","call","callData","unPackData","cy","executeData","gas_price","estimateParam","estimateGas","gas","executeContract","accountName","staticTimestamp","salesPieData","x","y","showChart","countDown","d","Date","setTime","getTime","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","tz","getTimezoneOffset","nextShareTime","returnPercent","a","b","showCountDown","className","padding","background","minHeight","body","clientHeight","itemLayout","size","rowKey","avatar","onClick","span","Meta","shape","src","href","count","textAlign","marginTop","dayProfit","format","onFinish","shareProfit","height","percent","hasLegend","animate","subTitle","dangerouslySetInnerHTML","__html","reduce","pre","now","valueFormat","val","dashed","suffix","minus","valueStyle","dateTimestamp","cDate","appendZero","getMonth","getDate","getHours","getMinutes","convertUTCDate","footer","getContainer","success","wrappedComponentRef","App","changeLocale","localeValue","target","locale","zhCN","enUS","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a719232c.chunk.js","sourcesContent":["import axios from 'axios';\n\nlet host = \"http://127.0.0.1:2345/\";\n\nclass Axios {\n\n    post(api, bizData, pageData, callback) {\n        let data = {\n            base: {\n                timestamp: 1234567,\n                sign: \"67ff54447b89f06fe4408b89902e585167abad291ec41118167017925e24e320\",\n            },\n            biz: bizData,\n            page: pageData,\n        }\n        axios.post(host + api, data).then(function (response) {\n            let data = response.data\n            if (callback) {\n                callback(data);\n            }\n        }).catch(function (error) {\n\n        })\n    }\n\n    postSeroRpc(_method, _params, callback) {\n        let data = {\n            id: 0,\n            jsonrpc: \"2.0\",\n            method: _method,\n            params: _params,\n        };\n        axios.post(host + \"rpc\", data).then(function (response) {\n            let data = response.data\n            if (callback) {\n                callback(data);\n            }\n        }).catch(function (error) {\n            console.log(\"req error: \",error)\n        })\n    }\n\n    postPullupRpc(_method, _params, callback) {\n        let data = {\n            id: 0,\n            method: _method,\n            params: _params,\n        };\n        axios.post(host + \"pullup_rpc\", data).then(function (response) {\n            let data = response.data\n            if (callback) {\n                callback(data);\n            }\n        }).catch(function (error) {\n\n        })\n    }\n\n}\n\nexport default Axios;","import React, {Component} from 'react'\nimport {Modal, Select} from \"antd\";\nimport Axios from \"../server\";\n// import Pullup from \"pullup-js-sdk\";\nimport popup from 'popup-js-sdk'\n\nlet tmpPkr = '';\nlet ajax = new Axios();\nconst {Option} = Select;\n\n// var pullup = new Pullup();\n// pullup.setProvider(new pullup.providers.HttpProvider('http://127.0.0.1:2345'));\n\nclass SelectAccount extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            accountOptions: [],\n            accounts: [],\n        }\n    }\n\n\n    componentDidMount() {\n        this.getAccounts();\n    }\n\n    handleOk = e => {\n        let that = this;\n        if (tmpPkr !== '') {\n            let accounts = that.state.accounts;\n            for (let ac of accounts) {\n                if (ac.MainPKr === tmpPkr) {\n                    that.props.selectAccount(ac);\n                }\n            }\n        }\n        that.props.hiddenAccount();\n    };\n\n    handleCancel = e => {\n        let that = this;\n        that.props.hiddenAccount();\n    };\n\n    onChange = (v) => {\n        tmpPkr = v;\n    }\n\n    formatPK(pk) {\n        return pk.slice(0, 10) + \"....\" + pk.slice(-10)\n    }\n\n    getAccounts() {\n        let that = this;\n        // let res = pullup.local.accountList()\n        popup.accountList(function (res) {\n            if (res) {\n                let dataArray = res;\n                let i = 0;\n                let tmpArr = [];\n                for (let ac of dataArray) {\n                    let acName = ac.Name;\n                    i++;\n                    if (!acName) {\n                        acName = \"Account\" + i;\n                    }\n                    tmpArr.push(<Option value={ac.MainPKr} key={i}>{acName + \" \" + that.formatPK(ac.PK)}</Option>)\n                }\n                that.setState({\n                    accountOptions: tmpArr,\n                    accounts: dataArray\n                })\n            }\n        });\n    };\n\n    render() {\n        return (\n            <Modal\n                title=\"Select Account\"\n                visible={this.props.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n            >\n                <Select showSearch\n                        style={{width: '98%'}}\n                        placeholder=\"Select an account\"\n                        onChange={(v) => {\n                            this.onChange(v);\n                        }}\n                >\n                    {this.state.accountOptions}\n                </Select>\n            </Modal>\n        )\n    }\n}\n\n\nexport default SelectAccount","class Lang {\n\n    zh_CN={\n        project:{\n            title:\"合约详情\",\n            totalSupply:\"发行量 (ASNOW)\",\n            contractAddress:\"合约地址\",\n            balanceSero:\"当前余额 (SERO)\",\n            balanceAsnow:\"当前余额 (ASNOW)\",\n            rate:\"兑换比例 (SERO / ASNOW)\",\n        },\n\n        account:{\n            title:{\n                utxo:\"钱包账户\",\n                contract:\"合约账户\",\n                swith:\"切换账户\",\n                balanceSero:\"余额 (SERO)\",\n                balanceAsnow:\"余额 (ASNOW)\",\n                estimatedTotal:\"预计总收益 (SERO)\",\n                dayIncome:\"当天返还比例\",\n                staticIncome:\"当天静态返还 (SERO)\",\n                withdraw:\"可提现金额 (SERO)\",\n                detail:\"详情\",\n                id:\"编号\",\n                referId:\"推荐人编号\",\n                areaId:\"大区编号\",\n                totalInvest:\"本金\",\n                profitLevel:\"收益倍数\",\n                latestTime:\"最新收益时间\",\n                totalReturn:\"当前返还总数(SERO)\",\n                totalReturnDay:\"当天返还总数(SERO)\",\n                recommend:\"下级人数\",\n                ticket:\"当前可用(ASNOW)\",\n                staticIncomeTips:\"今天的静态收益已经支付到可提现账户.\",\n                staticIncomeTips2:\"触发收益到提现账户.\",\n                investDetail:\"投资详情\",\n                myIncome:\"我的业绩\",\n                areaTotal:\"大区业绩\",\n                areaOtherTotal:\"业绩总和(不含大区)\",\n\n                staticReward:\"静态返还\",\n                recommendReward:\"推荐奖\",\n                nobilityReward:\"星级奖\",\n                vipReward:\"VIP奖\",\n                viewCode:\"查看智能合约\",\n\n            },\n            button:{\n                deposit:\"充值\",\n                buy:\"兑换ASNOW\",\n                invest:\"投资\",\n                buyTicket:\"充值ASNOW\",\n                trigger:\"触发收益\",\n                withdraw:\"提现\",\n                close:\"关闭\",\n                copy:\"拷贝\",\n            },\n            modal:{\n                deposit:{\n                    title:\"充值\",\n                    copy:\"拷贝\",\n                },\n\n                buyAsnow:{\n                    title:\"兑换ASNOW\",\n                    amount:\"数量 (SERO)\",\n                    amountPlace:\"输入数量\",\n                    rate:\"兑换比例\",\n                    exchange:\"兑换\",\n                    password:\"账户密码\",\n                    passwordPlace:\"输入账户密码\",\n                },\n\n                invest:{\n                    title:\"投资\",\n                    referId:\"推荐人编号\",\n                    amount:\"投资金额\",\n                    amountTips:\"100 SERO起投\",\n                    ticket:\"门票\",\n                    availableSERO:\"可用的余额\",\n                    availableAsnow:\"可用的ASNOW\",\n                    availableExchange:\"最多可抵用\",\n                    total:\"应付合计\",\n                    estimate:\"预计收益\",\n                    password:\"账户密码\",\n                    passwordPlace:\"输入账户密码\",\n                },\n\n                buyTicket:{\n                    title:\"充值ASNOW\",\n                    amount:\"数量 (ASNOW)\",\n                    amountPlace:\"输入数量\",\n                    password:\"账户密码\",\n                    passwordPlace:\"输入账户密码\",\n                    availableAsnow:\"可用的ASNOW\",\n                    availableExchange:\"可兑换\",\n                },\n                trigger:{\n                    password:\"账户密码\",\n                    passwordPlace:\"输入账户密码\",\n                },\n\n                withdraw:{\n                    password:\"账户密码\",\n                    passwordPlace:\"输入账户密码\",\n                    tips:\"* 提现金额将直接提到UTXO账户.\",\n                },\n            },\n        },\n        toast:{\n            lessAmount:\"SERO余额不足以支付本次交易.\",\n            lessTicket:\"当前可用的ASNOW不足，请先充值ASNOW\",\n            lessAsnow:\"钱包账户中可用的ASNOW不足，请先兑换ASNOW\",\n            minInvest:\"最小投资金额为100SERO.\",\n            tx:\"交易提交成功, 等待区块打包交易, 交易哈希: \",\n            copySuccess:\"拷贝成功! \",\n\n        }\n    };\n\n    en_US={\n        project:{\n            title:\"Contract Info\",\n            totalSupply:\"Total Supply (ASNOW)\",\n            contractAddress:\"Contract Address\",\n            balanceSero:\"Current Balance (SERO)\",\n            balanceAsnow:\"Current Balance (ASNOW)\",\n            rate:\"Exchange Rate (SERO / ASNOW)\",\n        },\n\n        account:{\n            title:{\n                utxo:\"Wallet Account\",\n                contract:\"Contract Account\",\n                swith:\"Switch Account\",\n                balanceSero:\"Balance (SERO)\",\n                balanceAsnow:\"Balance (ASNOW)\",\n                estimatedTotal:\"Estimated Total Income (SERO)\",\n                dayIncome:\"Return rate on the day\",\n                staticIncome:\"Static Return (SERO)\",\n                withdraw:\"Withdrawal Account (SERO)\",\n                detail:\"Detail\",\n                id:\"ID\",\n                referId:\"Refer ID\",\n                areaId:\"Large Area ID\",\n                totalInvest:\"Total Invest\",\n                profitLevel:\"Profit Level\",\n                latestTime:\"Latest Share Time\",\n                totalReturn:\"Total Return\",\n                totalReturnDay:\"Total return on the day (SERO)\",\n                recommend:\"Recommend Number\",\n                ticket:\"Available (ASNOW)\",\n                staticIncomeTips:\"Your income have been paid to the withdrawal account.\",\n                staticIncomeTips2:\"Trigger to withdrawal account. \",\n                investDetail:\"Invest Info\",\n                myIncome:\"My performance\",\n                areaTotal:\"Regional performance\",\n                areaOtherTotal:\"Total performance (excluding the large region)\",\n\n                staticReward:\"Static\",\n                recommendReward:\"Recommend\",\n                nobilityReward:\"Nobility\",\n                vipReward:\"VIP\",\n                viewCode:\"View Smart Contract\",\n            },\n            button:{\n                deposit:\"Deposit SERO\",\n                buy:\"Exchange ASNOW\",\n                invest:\"Invest\",\n                buyTicket:\"Deposit ASNOW\",\n                trigger:\"Trigger Income\",\n                withdraw:\"Withdraw\",\n                close:\"Close\",\n                copy:\"Copy\",\n            },\n            modal:{\n                deposit:{\n                    title:\"Deposit\",\n                    copy:\"COPY\",\n                },\n\n                buyAsnow:{\n                    title:\"Exchange ASNOW\",\n                    amount:\"Amount (SERO)\",\n                    amountPlace:\"Input Amount\",\n                    rate:\"Exchange Rate\",\n                    exchange:\"Exchange\",\n                    password:\"Password\",\n                    passwordPlace:\"Input Password\",\n                },\n                buyTicket:{\n                    title:\"Deposit ASNOW\",\n                    amount:\"Amount (ASNOW)\",\n                    amountPlace:\"Input Number\",\n                    password:\"Password\",\n                    passwordPlace:\"Input Your Password\",\n                    availableAsnow:\"Available ASNOW\",\n                    availableExchange:\"Exchange\",\n                },\n                invest:{\n                    title:\"Invest\",\n                    referId:\"Refer ID\",\n                    ticket:\"Tickets\",\n                    amount:\"Invet Amount\",\n                    amountTips:\"At least invest 100 SERO\",\n                    availableSERO:\"Available Blance\",\n                    availableAsnow:\"Available ASNOW\",\n                    availableExchange:\"Max Exchange\",\n                    total:\"Total\",\n                    estimate:\"Estimated Return\",\n                    password:\"Password\",\n                },\n\n                trigger:{\n                    password:\"Password\",\n                },\n\n                withdraw:{\n                    password:\"Password\",\n                    tips:\"* This is the withdrawal of the amount to the UTXO account.\",\n                },\n            },\n        },\n        toast:{\n            lessAmount:\"The balance is not enough to pay for this transaction.\",\n            lessTicket:\"There are not enough tickets, please depost the asnow first.\",\n            minInvest:\"Invest Amount at least 100 SERO.\",\n            lessAsnow:\"Insufficient ASNOW available in the wallet account, please exchange ASNOW first\",\n            tx:\"The transaction was submitted successfully, waiting for the block to be packaged, and the transaction hash: \",\n            copySuccess:\"Copy to clipboard successfully! \",\n        },\n    }\n}\n\nexport default Lang","import React, {Component} from 'react';\nimport {\n    Layout,\n    Skeleton,\n    Breadcrumb,\n    Descriptions,\n    Divider,\n    notification,\n    List,\n    Tag,\n    Avatar,\n    Row,\n    Col,\n    Statistic,\n    Button,\n    Modal,\n    ConfigProvider,\n    Radio,\n    Input,\n    Rate,\n    message, Form, InputNumber\n} from \"antd\";\n\nimport {WaterWave, Pie} from 'ant-design-pro/lib/Charts';\nimport 'ant-design-pro/dist/ant-design-pro.css';\nimport SelectAccount from \"./component/SelectAccount\"\nimport BigNumber from \"bignumber.js\"\nimport serojs from \"serojs\"\n\nimport \"./App.css\"\nimport copy from \"copy-text-to-clipboard\";\nimport QRCode from \"qrcode\";\nimport enUS from 'antd/es/locale/en_US';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport Language from \"./Lang\"\nimport identicon from \"identicon.js\"\nimport Contract from \"./component/contract\"\nimport popup from 'popup-js-sdk'\n\nlet ct = new Contract();\nlet Lang = new Language();\nconst {Header, Content, Footer} = Layout;\n\nlet contractAddress = ct.address;\nlet ABI = ct.abi;\n\nlet contract = serojs.callContract(ABI, contractAddress);\n\nlet decimal = new BigNumber(10).pow(18);\nconst {Countdown} = Statistic;\n\nlet host = window.location.host;\n\nlet dapp = {\n    name: \"ASNOW\",\n    contractAddress: \"25CHRYtgyxS1juHEv5ERh3PyD4X2PZZF529fgWDTLYbZ1K187MAQf4rVk2cBMLnhNL1APH6i1rSt6HGZZE3c3c2s\",\n    github: \"https://github.com/asnowhero/asnow-app\",\n    author: \"asnow\",\n    url: host+\"/asnow-app/\",\n    logo: host+\"/asnow-app/logo.png\",\n};\n\npopup.init(dapp, function () {\n    }\n);\nconst openNotificationWithIcon = (type, message, desc) => {\n    notification[type]({\n        message: message,\n        description: <p style={{wordBreak: 'normal', whiteSpace: 'pre-wrap', wordWrap: 'break-word'}}>{desc}</p>,\n        duration: null,\n    });\n};\n\nconst BuyAsnowForm = Form.create({name: 'form_in_modal1'})(\n    // eslint-disable-next-line\n    class extends React.Component {\n\n        state = {\n            asnow: 0,\n            confirmLoading: false,\n        }\n\n        inputSero = (v, rate) => {\n            let value = new BigNumber(v).dividedBy(rate).toFixed(2);\n            this.setState({\n                asnow: value\n            })\n        }\n\n        render() {\n            const {visible, rate, onCancel, onCreate, form} = this.props;\n            const {getFieldDecorator} = form;\n            let that = this;\n            return (\n                <Modal\n                    visible={visible}\n                    title={Lang[that.props.lang].account.modal.buyAsnow.title}\n                    // onCancel={onCancel}\n                    onOk={() => {\n                        this.setState({\n                            confirmLoading: true\n                        });\n                        setTimeout(function () {\n                            onCreate(function (res) {\n                                that.setState({\n                                    confirmLoading: res\n                                });\n                            });\n                        }, 2)\n                    }}\n                    onCancel={\n                        () => {\n                            onCancel();\n                            this.setState({\n                                confirmLoading: false\n                            });\n                        }\n\n                    }\n                    confirmLoading={this.state.confirmLoading}\n                >\n                    <Form layout=\"vertical\">\n                        <Form.Item label={Lang[that.props.lang].account.modal.buyAsnow.amount}>\n                            {getFieldDecorator('Amount', {\n                                rules: [{required: true, message: `Please Input Amount`}],\n                            })(<InputNumber min={0} step={100} style={{width: '100%'}} allowClear\n                                            onChange={(v) => this.inputSero(v, rate)}\n                                            placeholder={Lang[that.props.lang].account.modal.buyAsnow.amountPlace}\n                                            autoComplete=\"off\"/>)}\n                        </Form.Item>\n                        <p>Rate: {<span style={{color: '#1DA57A'}}>1 ASNOW = {rate} SERO</span>} , Exchange: {<strong\n                            style={{color: 'rgb(216, 0, 38)'}}>{new BigNumber(this.state.asnow).toFixed(6)}</strong>} ASNOW</p>\n                    </Form>\n                </Modal>\n            );\n        }\n    },\n);\n\nconst InvestForm = Form.create({name: 'form_in_modal2'})(\n    class extends React.Component {\n\n        state = {\n            confirmLoading: false,\n            estimateReturn: 0,\n            estimateLevel: 0,\n            ticket: 0.000000,\n            amount: 0.000000,\n            total: 0.000000,\n            ticketSero: 0.000000,\n            ticketAsnow: 0.000000,\n        }\n\n        staticTotal() {\n            let that = this;\n            setTimeout(function () {\n                let rate = that.props.rate;\n                let times = that.props.times;\n                let ticket = new BigNumber(that.state.ticketSero);\n                let total = new BigNumber(that.state.amount);\n                let ticketAsnow = new BigNumber(that.state.amount).dividedBy(10).dividedBy(rate);\n\n                let estimateLevel = 3;\n                if (times > 0) {\n                    estimateLevel = times;\n                } else {\n                    if (parseFloat(that.state.amount) > 0 && parseFloat(that.state.amount) < 1000) {\n                        estimateLevel = 3\n                    } else if (parseFloat(that.state.amount) >= 1000 && parseFloat(that.state.amount) < 5000) {\n                        estimateLevel = 4\n                    } else if (parseFloat(that.state.amount) >= 5000) {\n                        estimateLevel = 5\n                    }\n                }\n\n                that.setState({\n                    ticket: ticket.toFixed(6),\n                    total: total.toFixed(6),\n                    ticketAsnow: ticketAsnow.toFixed(6),\n                    estimateLevel: estimateLevel\n                })\n            }, 10)\n        }\n\n        render() {\n            const {visible, asnow, rate, sero, onCancel, onCreate, form, referId} = this.props;\n            const {getFieldDecorator, setFieldsValue} = form;\n\n            setTimeout(function () {\n                if (referId && referId !== 0) {\n                    setFieldsValue({\"ReferId\": referId});\n                }\n            }, 100)\n\n            let that = this;\n            return (\n                <Modal\n                    visible={visible}\n                    title={Lang[that.props.lang].account.modal.invest.title}\n                    onCancel={onCancel}\n                    onOk={() => {\n                        this.setState({\n                            confirmLoading: true\n                        });\n                        setTimeout(function () {\n                            onCreate(function (res) {\n                                that.setState({\n                                    confirmLoading: res\n                                });\n                            });\n                        }, 10)\n                    }}\n                    confirmLoading={this.state.confirmLoading}\n                >\n                    <Form layout=\"vertical\">\n                        <Form.Item label={Lang[that.props.lang].account.modal.invest.referId}>\n                            {getFieldDecorator(`ReferId`, {\n                                rules: [{required: true, message: `Please Input Refer Id`}],\n                            })(<Input style={{width: '60%'}} disabled={!(!referId || referId === 0)}\n                                      placeholder={referId ? referId : \"\"} autoComplete=\"off\"/>)}\n                        </Form.Item>\n                        <Form.Item\n                            label={`${Lang[that.props.lang].account.modal.invest.amount} (Available Balance: ${sero} SERO)`}>\n                            {getFieldDecorator('AmountSero', {\n                                rules: [{required: true, message: `Please Input Amount! `}],\n                            })(<InputNumber min={0} precision={6} max={parseFloat(sero)} step={100}\n                                            style={{width: '60%'}} onChange={(v) => {\n                                let ticketSero = new BigNumber(v).dividedBy(10).toFixed(6);\n                                setFieldsValue({'TicketSero': ticketSero});\n                                that.setState({amount: v, ticketSero: ticketSero});\n                                that.staticTotal();\n                            }} allowClear placeholder=\"0.000000\" autoComplete=\"off\"/>)}\n                            <br/>SERO ({Lang[that.props.lang].account.modal.invest.amountTips})\n                        </Form.Item>\n                        <Form.Item label={`${Lang[that.props.lang].account.modal.invest.ticket} (Amount x 10%)`}>\n                            {getFieldDecorator('TicketSero', {\n                                rules: [{required: true, message: 'Please input SERO value!'}],\n                            })(<InputNumber precision={6} disabled={true} min={0} max={parseFloat(sero)} step={100}\n                                            style={{width: '40%'}} onChange={(v) => {\n                                that.setState({ticketSero: v});\n                                that.staticTotal();\n                            }} allowClear placeholder=\"0.000000\" autoComplete=\"off\"/>)}\n                            <br/> SERO (1 ASNOW\n                            = {rate} SERO){Lang[that.props.lang].account.modal.invest.availableAsnow}: {<span\n                            style={{color: '#1DA57A'}}>{asnow ? asnow : \"0\"}</span>}\n                        </Form.Item>\n                        <p>{Lang[that.props.lang].account.modal.invest.estimate}: <span\n                            style={{color: '#1DA57A'}}>{that.state.amount}</span> (SERO) x <span\n                            style={{color: '#1DA57A'}}>{that.state.estimateLevel} </span>(Times) = <strong\n                            style={{color: 'rgb(216, 0, 38)'}}>{new BigNumber(that.state.amount).multipliedBy(that.state.estimateLevel).toFixed(6)} </strong>SERO\n                        </p>\n\n                        <p>{Lang[that.props.lang].account.modal.invest.total} : <strong\n                            style={{color: 'rgb(216, 0, 38)'}}>{this.state.total}</strong> SERO, <strong\n                            style={{color: 'rgb(216, 0, 38)'}}>{this.state.ticketAsnow}</strong> ASNOW</p>\n                    </Form>\n                </Modal>\n            );\n        }\n    },\n);\n\nconst BuyTicketForm = Form.create({name: 'form_in_modal5'})(\n    // eslint-disable-next-line\n    class extends React.Component {\n\n        state = {\n            asnow: 0,\n            confirmLoading: false,\n        }\n\n        render() {\n            const {visible, asnow, onCancel, onCreate, form} = this.props;\n            const {getFieldDecorator} = form;\n            let that = this;\n            return (\n                <Modal\n                    visible={visible}\n                    title={Lang[that.props.lang].account.modal.buyTicket.title}\n                    onCancel={onCancel}\n                    onOk={() => {\n                        this.setState({\n                            confirmLoading: true\n                        });\n                        setTimeout(function () {\n                            onCreate(function (res) {\n                                that.setState({\n                                    confirmLoading: res\n                                });\n                            });\n                        }, 10)\n                    }}\n                    confirmLoading={this.state.confirmLoading}\n                >\n                    <Form layout=\"vertical\">\n                        <Form.Item\n                            label={`${Lang[that.props.lang].account.modal.buyTicket.amount}(${Lang[that.props.lang].account.modal.buyTicket.availableAsnow}:${asnow})`}>\n                            {getFieldDecorator('Amount', {\n                                rules: [{required: true, message: `Please Input Amount`}],\n                            })(<InputNumber min={0} max={parseFloat(asnow)} step={100} precision={5}\n                                            style={{width: '100%'}} allowClear\n                                            placeholder={Lang[that.props.lang].account.modal.buyTicket.amountPlace}\n                                            autoComplete=\"off\"/>)}\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            );\n        }\n    },\n);\n\nclass ContentPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            showAccountSelect: false,\n            showDeposit: false,\n            showBuyAsnow: false,\n            showBuyTicket: false,\n            showInvest: false,\n            showShareProfit: false,\n            showWithdraw: false,\n\n            modal1Visible: false,\n\n            currentAccount: {},\n            balanceSero: 0,\n            balanceAsnow: 0,\n\n            ct_balance_asnow: 0,\n            ct_rate: 0,\n            ct_id: 0,\n            ct_details: {},\n\n            lang: \"zh_CN\",\n        }\n    }\n\n    componentWillMount() {\n        let lang = localStorage.getItem(\"lang\");\n        if (!lang) {\n            lang = \"zh_CN\";\n            localStorage.setItem(\"lang\", \"zh_CN\");\n        }\n        this.setState({\n            lang: lang,\n        })\n    }\n\n    componentDidMount() {\n        let that = this;\n        that.showSelectAccount();\n        if (!this.state.showAccountSelect) {\n            setTimeout(function () {\n                that.getDetail();\n                // that.getAsnowBalances();\n                that.getRate();\n                that.getContractSeroBalance();\n\n            }, 3000)\n        }\n\n        setInterval(function () {\n            that.getDetail();\n            // that.getAsnowBalances();\n            that.getRate();\n            that.getContractSeroBalance();\n            if (that.state.currentAccount.PK) {\n                that.getAccount(that.state.currentAccount.PK)\n            }\n        }, 60 * 1000)\n    }\n\n    showSelectAccount() {\n\n        if (!this.state.currentAccount.PK) {\n            let pk = localStorage.getItem(\"accountPk\");\n            if (pk) {\n                this.getAccount(pk)\n                this.setState({\n                    loading: false\n                })\n            } else {\n                this.setState({\n                    showAccountSelect: true\n                })\n            }\n        }\n    }\n\n    showDeposit() {\n\n        this.setState({\n            showDeposit: true\n        })\n\n        let canvas = document.getElementById('qrImg')\n        QRCode.toCanvas(canvas, this.state.currentAccount.MainPKr, function (error) {\n            if (error) console.error(error)\n            console.log('success!');\n        })\n    }\n\n    selectAccount = ac => {\n        this.setState({\n            currentAccount: ac,\n            showAccountSelect: false,\n            loading: false\n        });\n        localStorage.setItem(\"accountPk\", ac.PK);\n        window.location.reload();\n\n    }\n\n    hiddenAccount = () => {\n        this.setState({\n            showAccountSelect: false,\n        });\n    }\n\n    onChange = checked => {\n        this.setState({loading: !checked});\n    };\n\n    getContractSeroBalance() {\n        let that = this;\n        that.callMethod(\"balanceOfSero\", [], function (res) {\n            if (res) {\n                that.setState({\n                    ct_balanceOfSero: new BigNumber(res, 10).dividedBy(decimal).toFixed(6),\n                })\n            }\n        })\n    }\n\n    //pullup\n    getAccount(pk) {\n        let that = this;\n        popup.accountDetail(pk, function (currentAccount) {\n            let balanceSero = 0;\n            let balanceAsnow = 0;\n            let balanceObj = currentAccount.Balance;\n            balanceObj.forEach(function (value, currency) {\n                if (currency === 'SERO') {\n                    balanceSero = new BigNumber(value).dividedBy(decimal).toFixed(6);\n                } else if (currency === 'ASNOW') {\n                    balanceAsnow = new BigNumber(value).dividedBy(decimal).toFixed(6);\n                }\n            });\n\n            let data = new identicon(pk, 200).toString();\n            currentAccount[\"avatar\"] = \"data:image/png;base64,\" + data;\n            that.setState({\n                currentAccount: currentAccount,\n                balanceSero: balanceSero,\n                balanceAsnow: balanceAsnow\n            });\n        });\n    }\n\n\n    //=== contract\n\n    getDetail() {\n        let that = this;\n        let res = that.callMethod(\"details\", [], function (res) {\n            let detail = {\n                referId: \"\",\n                largeAreaId: \"\",\n                largeAreaTotal: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                amount: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                returnAmount: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                achievement: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                recommendNum: parseInt(new BigNumber(\"0\").toString(10)),\n                profitLevel: parseInt(new BigNumber(\"0\").toString(10)),\n                value: new BigNumber(\"0\").dividedBy(decimal).toFixed(6),\n                star: parseInt(new BigNumber(\"0\").toString(10)),\n                isKing: false,\n            }\n            if (res !== \"0x0\") {\n                let data = res;\n                detail = {\n                    referId: data[0] == 'JFVVW2ITNSJHF' ? \"\" : data[0],\n                    largeAreaId: data[1] == 'JFVVW2ITNSJHF' ? \"\" : data[1],\n                    largeAreaTotal: new BigNumber(data[2]).dividedBy(decimal).toFixed(6),\n                    amount: new BigNumber(data[3]).dividedBy(decimal).toFixed(6),\n                    returnAmount: new BigNumber(data[4]).dividedBy(decimal).toFixed(6),\n                    achievement: new BigNumber(data[5]).dividedBy(decimal).toFixed(6),\n                    recommendNum: parseInt(new BigNumber(data[6]).toString(10)),\n                    profitLevel: parseInt(new BigNumber(data[7]).toString(10)),\n                    value: new BigNumber(data[8]).dividedBy(decimal).toFixed(6),\n                    star: parseInt(new BigNumber(data[9]).toString(10)),\n                    isKing: data[10],\n                }\n            }\n            that.callMethod(\"balanceOfAsnow\", [], function (balanceOfAsnow) {\n                detail[\"asnowBalances\"] = new BigNumber(balanceOfAsnow).dividedBy(decimal).toFixed(6);\n                that.callMethod(\"id\", [], function (id) {\n                    detail[\"id\"] = (id == \"JFVVW2ITNSJHF\" ? \"\" : id);\n                    that.callMethod(\"detailsOfIncome\", [], function (detailsOfIncome) {\n                        detail[\"detailsOfIncome\"] = detailsOfIncome;\n                        that.callMethod(\"calcuStaticProfit\", [], function (calcuStaticProfit) {\n                            if (calcuStaticProfit === '0x') {\n                                calcuStaticProfit = \"0\";\n                            }\n                            detail[\"dayProfit\"] = new BigNumber(calcuStaticProfit).dividedBy(decimal).toFixed(6);\n\n                            console.log(\"detail:\",detail);\n                            that.setState({\n                                ct_details: detail\n                            })\n                        });\n\n                    });\n                });\n            });\n\n\n        });\n\n    }\n\n    getRate() {\n        let that = this;\n        that.callMethod(\"conversionRate\", [], function (res) {\n            if (res && res.length > 0) {\n                let asnow = new BigNumber(res[0]);\n                let sero = new BigNumber(res[1])\n                let point = asnow.dividedBy(sero).toFixed(2);\n                that.setState({ct_rate: point});\n            }\n        });\n    }\n\n    callMethod(_method, args, callback) {\n\n        console.log(\"this.state.currentAccount.MainPKr::\",this.state.currentAccount);\n\n        let packData = contract.packData(_method, args);\n        let callParams = {\n            from: this.state.currentAccount.MainPKr,\n            to: contractAddress,\n            data: packData\n        };\n\n        popup.call(callParams, function (callData) {\n            // let callData = pullup.sero.call(callParams, \"latest\");\n            let res = contract.unPackData(_method, callData);\n            callback(res);\n        });\n    }\n\n    executeMethod(_method, args, value, cy, password, callback) {\n        let that = this;\n\n        let packData = contract.packData(_method, args);\n        let executeData = {\n            from: that.state.currentAccount.PK,\n            to: contractAddress,\n            value: \"0x\" + value,//SERO\n            data: packData,\n            gas_price: \"0x\" + new BigNumber(\"1000000000\").toString(16),\n            cy: cy,\n        };\n        let estimateParam = {\n            from: that.state.currentAccount.MainPKr,\n            to: contractAddress,\n            value: \"0x\" + value,//SERO\n            data: packData,\n            gas_price: \"0x\" + new BigNumber(\"1000000000\").toString(16),\n            cy: cy,\n        };\n        // executeData[\"gas\"] = pullup.sero.estimateGas(estimateParam);\n        popup.estimateGas(estimateParam, function (gas) {\n            executeData[\"gas\"] = gas;\n            // let res = pullup.local.executeContract(executeData)\n            popup.executeContract(executeData, function (res) {\n                callback(res);\n            });\n        });\n    }\n\n\n    handleCancel = () => {\n        this.setState({\n            showDeposit: false\n        })\n    }\n\n    //====  buyAsnow begin\n    handleBuyAsnowCancel = () => {\n        this.setState({showBuyAsnow: false});\n    };\n\n    handleBuyAsnowCreate = (cb) => {\n        let that = this;\n        const {form} = this.formRef.props;\n        form.validateFields((err, values) => {\n            if (err) {\n                if (cb) {\n                    cb(false)\n                }\n                return;\n            }\n            let amount = form.getFieldValue(\"Amount\");\n            try {\n                this.executeMethod(\"buyAsnow\", [], new BigNumber(amount).multipliedBy(decimal).toString(16), \"SERO\", '', function (res) {\n                    if (res) {\n                        form.resetFields();\n                        that.setState({showBuyAsnow: false});\n                        setTimeout(function () {\n                            openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                        }, 3000)\n                    }\n                    if (cb) {\n                        cb(false)\n                    }\n                });\n            } catch (err) {\n                if (err) {\n                    message.error(err.message);\n                } else {\n                    message.error(\"request SERO Node error:[\" + err.message + \"]\");\n                }\n                if (cb) {\n                    cb(false)\n                }\n            }\n\n        });\n    };\n\n    saveBuyAsnowFormRef = formRef => {\n        this.formRef = formRef;\n    };\n    //====  buyAsnow end\n\n    //====  Invest begin\n    handleInvestCancel = () => {\n        this.setState({showInvest: false});\n    };\n\n    handleInvestCreate = (cb) => {\n        let that = this;\n        const {form} = this.formRef2.props;\n        form.validateFields((err, values) => {\n            if (err) {\n                if (cb) {\n                    cb(false)\n                }\n                return;\n            }\n            let amountSero = form.getFieldValue(\"AmountSero\");\n            // let ticketSero=form.getFieldValue(\"TicketSero\");\n            let referId = form.getFieldValue(\"ReferId\");\n            let password = form.getFieldValue(\"Password\");\n\n            let ticketAsnow = new BigNumber(amountSero).dividedBy(10).dividedBy(that.state.ct_rate).toFixed(6);\n\n            if (that.state.ct_details.referId) {\n                referId = that.state.ct_details.referId;\n            }\n            if (new BigNumber(amountSero).comparedTo(new BigNumber(this.state.balanceSero)) > 0) {\n                if (cb) {\n                    cb(false)\n                }\n                message.warn(Lang[that.state.lang].toast.lessAmount);\n            } else if (new BigNumber(ticketAsnow).comparedTo(new BigNumber(this.state.ct_details.asnowBalances)) > 0) {\n                if (cb) {\n                    cb(false)\n                }\n                message.warn(Lang[that.state.lang].toast.lessTicket);\n            } else if (parseFloat(amountSero) < 100) {\n                if (cb) {\n                    cb(false)\n                }\n                message.warn(Lang[that.state.lang].toast.minInvest);\n            } else {\n                try {\n                    this.executeMethod(\"invest\", [referId], new BigNumber(amountSero).multipliedBy(decimal).toString(16), \"SERO\", password, function (res) {\n                        if (res) {\n                            form.resetFields();\n                            that.setState({showInvest: false});\n                            setTimeout(function () {\n                                openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                            }, 3000)\n                        }\n                        if (cb) {\n                            cb(false)\n                        }\n                    });\n                } catch (err) {\n                    if (err) {\n                        message.error(err.message);\n                    } else {\n                        message.error(\"request SERO Node error:[\" + err.message + \"]\");\n                    }\n                    if (cb) {\n                        cb(false)\n                    }\n                }\n            }\n        });\n    };\n\n    calcuPrincipalProfit = (sero, cb) => {\n        if (sero) {\n            let seroHex = \"0x\" + new BigNumber(sero).multipliedBy(decimal).toString(16);\n            this.callMethod(\"calcuPrincipalProfit\", [seroHex], function (res) {\n                if (cb) {\n                    cb(res);\n                }\n            })\n        }\n    }\n\n    saveInvestFormRef = formRef => {\n        this.formRef2 = formRef;\n    };\n\n    //====  Invest end\n\n    shareProfit() {\n        let that = this;\n        try {\n            this.executeMethod(\"triggerStaticProfit\", [], \"0\", \"SERO\", '', function (res) {\n                if (res) {\n                    openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                } else {\n                    if (res.error) {\n                        message.error(res.error.message);\n                    } else {\n                        message.error(\"request SERO Node error:[\" + res + \"]\");\n                    }\n                }\n            });\n        } catch (err) {\n            if (err) {\n                message.error(err.message);\n            } else {\n                message.error(\"request SERO Node error:[\" + err.message + \"]\");\n            }\n        }\n\n    }\n\n    withdraw() {\n        let that = this;\n        try {\n            this.executeMethod(\"withdrawBalance\", [], \"0\", \"SERO\", '', function (res) {\n                if (res) {\n                    openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                } else {\n                    if (res.error) {\n                        message.error(res.error.message);\n                    } else {\n                        message.error(\"request SERO Node error:[\" + res + \"]\");\n                    }\n                }\n            });\n        } catch (err) {\n            if (err) {\n                message.error(err.message);\n            } else {\n                message.error(\"request SERO Node error:[\" + err.message + \"]\");\n            }\n        }\n    }\n\n\n    //==== Buy Ticket begin\n\n    handleBuyTicketCancel = () => {\n        this.setState({showBuyTicket: false});\n    };\n\n    handleBuyTicketCreate = (cb) => {\n        let that = this;\n        const {form} = this.formRef5.props;\n        form.validateFields((err, values) => {\n            if (err) {\n                if (cb) {\n                    cb(false)\n                }\n                return;\n            }\n\n            let amount = form.getFieldValue(\"Amount\");\n            if (new BigNumber(amount).comparedTo(new BigNumber(that.state.balanceAsnow)) > 0) {\n                if (cb) {\n                    cb(false)\n                }\n                message.warn(Lang[that.state.lang].toast.lessAsnow);\n            } else {\n                try {\n                    this.executeMethod(\"paymentAsnow\", [], new BigNumber(amount).multipliedBy(decimal).toString(16), \"ASNOW\", '', function (res) {\n                        if (res) {\n                            form.resetFields();\n                            that.setState({showBuyTicket: false});\n                            setTimeout(function () {\n                                openNotificationWithIcon('success', 'Successful', `${Lang[that.state.lang].toast.tx}${res}`)\n                            }, 3000)\n                        }\n                        if (cb) {\n                            cb(false)\n                        }\n                    });\n                } catch (err) {\n                    if (err) {\n                        message.error(err.message);\n                    } else {\n                        message.error(\"request SERO Node error:[\" + err.message + \"]\");\n                    }\n                    if (cb) {\n                        cb(false)\n                    }\n                }\n            }\n        });\n    };\n\n    saveBuyTicketFormRef = formRef => {\n        this.formRef5 = formRef;\n    };\n\n\n    //==== Buy Ticket end\n\n    render() {\n        const {loading, showAccountSelect, currentAccount} = this.state;\n        let accountName = currentAccount.PK;\n        let that = this;\n        let staticReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[0]).dividedBy(decimal).toFixed(2) : 0;\n        let recommendReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[1]).dividedBy(decimal).toFixed(2) : 0;\n        let nobilityReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[2]).dividedBy(decimal).toFixed(2) : 0;\n        let vipReward = that.state.ct_details.detailsOfIncome ? new BigNumber(that.state.ct_details.detailsOfIncome[3]).dividedBy(decimal).toFixed(2) : 0;\n        // let currentIncome = that.state.ct_details.detailsOfIncome?new BigNumber(that.state.ct_details.detailsOfIncome[4]).dividedBy(decimal).toFixed(2):0;\n        let staticTimestamp = that.state.ct_details.detailsOfIncome ? that.state.ct_details.detailsOfIncome[5] : 0;\n\n        const salesPieData = [\n            {\n                x: Lang[this.state.lang].account.title.staticReward,\n                y: parseFloat(staticReward),\n            },\n            {\n                x: Lang[this.state.lang].account.title.recommendReward,\n                y: parseFloat(recommendReward),\n            },\n            {\n                x: Lang[this.state.lang].account.title.nobilityReward,\n                y: parseFloat(nobilityReward),\n            },\n            {\n                x: Lang[this.state.lang].account.title.vipReward,\n                y: parseFloat(vipReward),\n            },\n\n        ];\n\n        const showChart = parseFloat(staticReward) > 0 || parseFloat(recommendReward) > 0 || parseFloat(nobilityReward) > 0 || parseFloat(vipReward) > 0\n\n        const countDown = nextShareTime();\n        let totalReturnDay = this.state.ct_balanceOfSero ? new BigNumber(this.state.ct_balanceOfSero).dividedBy(30).toFixed(6) : \"0\";\n        let returnPercent = 0;\n        if (this.state.ct_details.returnAmount && parseFloat(this.state.ct_details.returnAmount) > 0) {\n            let a = parseFloat(this.state.ct_details.returnAmount);\n            let b = new BigNumber(this.state.ct_details.amount).multipliedBy(this.state.ct_details.profitLevel).toString(10);\n            returnPercent = (a * 100 / parseFloat(b)).toFixed(2);\n        }\n\n        let showCountDown = new Date(staticTimestamp * 1000).getUTCDate() === parseInt(new Date().getUTCDate());\n        return (\n            <div className=\"App\">\n                <Content style={{padding: '0 8px'}}>\n                    <div style={{background: '#fff', padding: 5, minHeight: document.body.clientHeight}}>\n\n                        <List itemLayout=\"vertical\" size=\"large\" rowKey=\"1\">\n                            <List.Item>\n                                <Skeleton loading={loading} avatar>\n                                    <Descriptions title={\n                                        <h1>{Lang[this.state.lang].account.title.utxo} <Button size=\"small\"\n                                                                                               onClick={() => {\n                                                                                                   this.setState({\n                                                                                                       showAccountSelect: true\n                                                                                                   })\n                                                                                               }}>{Lang[this.state.lang].account.title.swith}</Button>\n                                        </h1>}/>\n                                    <Row>\n                                        <Col span={24}>\n                                            <List.Item.Meta\n                                                avatar={<p><Avatar shape=\"square\" size={64}\n                                                                   src={currentAccount.avatar}/></p>}\n                                                title={\n                                                    <a href={`http://129.211.98.114:3006/web/v0_1_7/account-detail.html?pk=${currentAccount.PK}`}><small>{accountName ? accountName.slice(0, 10) + \"...\"+accountName.slice(-10) : \"\"}{this.state.ct_details.isKing ?\n                                                        <Tag color=\"gold\">VIP</Tag> : \"\"}</small></a>}\n                                                description={<Rate count={4}\n                                                                   value={this.state.ct_details.star ? this.state.ct_details.star : 0}\n                                                                   disabled/>}\n                                            />\n                                        </Col>\n\n                                    </Row>\n                                    <Row style={{textAlign: 'center'}}>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.balanceSero}\n                                                       value={this.state.balanceSero} precision={6}/>\n                                            <Button style={{marginTop: 16}} type=\"primary\" onClick={() => {\n                                                this.showDeposit()\n                                            }}>{Lang[this.state.lang].account.button.deposit}</Button>\n                                        </Col>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.balanceAsnow}\n                                                       value={this.state.balanceAsnow} precision={6}/>\n                                            <Button style={{marginTop: 16}} type=\"primary\" onClick={() => {\n                                                this.setState({showBuyAsnow: true})\n                                            }}>{Lang[this.state.lang].account.button.buy}</Button>\n                                        </Col>\n                                    </Row>\n\n                                </Skeleton>\n                            </List.Item>\n\n                            <List.Item>\n                                <Skeleton loading={loading}>\n                                    <Descriptions title={<h1>{Lang[this.state.lang].account.title.contract}</h1>}/>\n\n                                    <Row style={{textAlign: 'center'}}>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.estimatedTotal}\n                                                       value={new BigNumber(this.state.ct_details.amount ? this.state.ct_details.amount : 0).multipliedBy(this.state.ct_details.profitLevel ? this.state.ct_details.profitLevel : 0).toFixed(6)}\n                                                       precision={6}/>\n                                            <Button style={{marginTop: 16}} type=\"primary\" onClick={() => {\n                                                this.setState({showInvest: true})\n                                            }}>{Lang[this.state.lang].account.button.invest}</Button>\n                                        </Col>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.ticket}\n                                                       value={new BigNumber(this.state.ct_details.asnowBalances ? this.state.ct_details.asnowBalances : 0).toFixed(6)}\n                                                       precision={6}/>\n                                            <Button style={{marginTop: 16}} type=\"primary\" onClick={() => {\n                                                this.setState({showBuyTicket: true})\n                                            }}>{Lang[this.state.lang].account.button.buyTicket}</Button>\n                                        </Col>\n\n                                    </Row>\n                                    <Row style={{textAlign: 'center'}}>\n                                        <p/>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.staticIncome}\n                                                       value={this.state.ct_details.dayProfit} precision={6}/>\n                                            {\n                                                showCountDown ?\n                                                    <Countdown style={{marginTop: 14}} title=\"\" format=\"HH:mm:ss\"\n                                                               value={parseFloat(countDown)} onFinish={() => {\n                                                        this.getDetail()\n                                                    }}/> : <Button style={{marginTop: 16}} type=\"primary\"\n                                                                   disabled={showCountDown} onClick={() => {\n                                                        this.shareProfit()\n                                                    }}>{Lang[this.state.lang].account.button.trigger}</Button>\n                                            }\n                                        </Col>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.withdraw}\n                                                       value={new BigNumber(this.state.ct_details.value ? this.state.ct_details.value : 0).toFixed(6)}\n                                                       precision={6}/>\n                                            <Button style={{marginTop: 16}} disabled={new BigNumber(this.state.ct_details.value ? this.state.ct_details.value : 0).comparedTo(0) < 1} type=\"primary\" onClick={() => {\n                                                this.withdraw()\n                                            }}>{Lang[this.state.lang].account.button.withdraw}</Button>\n                                        </Col>\n                                    </Row>\n                                    {\n                                        showChart ?\n                                            <Row style={{textAlign: 'center'}}>\n                                                <Col span={24} style={{textAlign: 'center'}}>\n                                                    <div>\n                                                        {returnPercent > 0 ? <WaterWave height={234}\n                                                                                        title={Lang[this.state.lang].account.title.totalReturn}\n                                                                                        percent={returnPercent}/> :\n                                                            <WaterWave height={234}\n                                                                       title={Lang[this.state.lang].account.title.totalReturn}\n                                                                       percent={0}/>}\n                                                    </div>\n                                                </Col>\n                                                <Col span={24} style={{textAlign: 'left'}}>\n                                                    <Pie\n                                                        hasLegend\n                                                        animate\n                                                        title={Lang[this.state.lang].account.title.totalReturn}\n                                                        subTitle={Lang[this.state.lang].account.title.totalReturn}\n                                                        total={() => (\n                                                            <span\n                                                                dangerouslySetInnerHTML={{\n                                                                    __html: salesPieData.reduce((pre, now) => now.y + pre, 0),\n                                                                }}\n                                                            />\n                                                        )}\n                                                        data={salesPieData}\n                                                        valueFormat={val => <span\n                                                            dangerouslySetInnerHTML={{__html: val}}/>}\n                                                        height={248}\n                                                    />\n                                                </Col>\n                                            </Row> : \"\"\n                                    }\n                                    <Divider dashed={true}/>\n                                    <Row style={{textAlign: 'center'}}>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.totalReturnDay}\n                                                       value={totalReturnDay} precision={6}/>\n                                        </Col>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.dayIncome}\n                                                       value={this.state.ct_details.dayProfit ? new BigNumber(this.state.ct_details.dayProfit).multipliedBy(100).dividedBy(totalReturnDay).toFixed(2) : \"0\"}\n                                                       suffix={\"%\"}/>\n                                        </Col>\n\n                                    </Row>\n                                    <Row style={{textAlign: 'center'}}>\n                                        <p/>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.areaTotal}\n                                                       value={this.state.ct_details.largeAreaTotal} precision={6}/>\n                                        </Col>\n                                        <Col span={12}>\n                                            <Statistic title={Lang[this.state.lang].account.title.areaOtherTotal}\n                                                       value={new BigNumber(this.state.ct_details.achievement).minus(new BigNumber(this.state.ct_details.largeAreaTotal)).toFixed(6)}\n                                                       precision={6}/>\n                                        </Col>\n                                    </Row>\n                                </Skeleton>\n                            </List.Item>\n\n                            <List.Item>\n                                <Skeleton loading={loading}>\n                                    <Descriptions title={<h1>{Lang[this.state.lang].project.title}</h1>}>\n                                        <Descriptions.Item label={Lang[this.state.lang].project.contractAddress}>\n                                            <small>{contractAddress}</small>\n                                        </Descriptions.Item>\n                                    </Descriptions>\n\n                                    <Row>\n                                        <Col span={8}>\n                                            <Statistic title={Lang[this.state.lang].project.rate}\n                                                       value={this.state.ct_rate} precision={2}\n                                                       valueStyle={{color: '#3f8600'}}/>\n                                        </Col>\n                                    </Row>\n                                    <Divider dashed={true}/>\n                                    <Descriptions title={Lang[this.state.lang].account.title.investDetail}>\n                                        <Descriptions.Item\n                                            label={Lang[this.state.lang].account.title.id}>{this.state.ct_details.id}</Descriptions.Item>\n                                        <Descriptions.Item\n                                            label={Lang[this.state.lang].account.title.referId}>{this.state.ct_details.referId}</Descriptions.Item>\n                                        <Descriptions.Item\n                                            label={Lang[this.state.lang].account.title.areaId}>{this.state.ct_details.largeAreaId}</Descriptions.Item>\n                                        <Descriptions.Item\n                                            label={Lang[this.state.lang].account.title.totalInvest}>{this.state.ct_details.amount}</Descriptions.Item>\n                                        <Descriptions.Item\n                                            label={Lang[this.state.lang].account.title.profitLevel}>{this.state.ct_details.profitLevel}</Descriptions.Item>\n                                        <Descriptions.Item\n                                            label={Lang[this.state.lang].account.title.latestTime}>{convertUTCDate(staticTimestamp)}</Descriptions.Item>\n                                    </Descriptions>\n                                </Skeleton>\n                            </List.Item>\n\n                        </List>\n                    </div>\n                </Content>\n\n                <SelectAccount visible={showAccountSelect} selectAccount={this.selectAccount}\n                               hiddenAccount={this.hiddenAccount}/>\n\n                <Modal\n                    title={Lang[this.state.lang].account.modal.deposit.title}\n                    visible={this.state.showDeposit}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                    getContainer={false}\n                >\n                    <div style={{textAlign: \"center\"}}>\n                        <canvas id=\"qrImg\"></canvas>\n                        <p style={{wordBreak: 'normal', whiteSpace: 'pre-wrap', wordWrap: 'break-word'}}>\n                            <small>{this.state.currentAccount.MainPKr}</small></p>\n                        <Button className='copyTxt' onClick={() => {\n                            copy(this.state.currentAccount.MainPKr);\n                            message.success('Copy to clipboard successfully');\n                        }}>{Lang[this.state.lang].account.modal.deposit.copy}</Button>\n                    </div>\n                </Modal>\n\n                <BuyAsnowForm\n                    wrappedComponentRef={this.saveBuyAsnowFormRef}\n                    visible={this.state.showBuyAsnow}\n                    onCancel={this.handleBuyAsnowCancel}\n                    onCreate={this.handleBuyAsnowCreate}\n                    rate={this.state.ct_rate}\n                    lang={this.state.lang}\n                />\n\n                <InvestForm\n                    wrappedComponentRef={this.saveInvestFormRef}\n                    visible={this.state.showInvest}\n                    onCancel={this.handleInvestCancel}\n                    onCreate={this.handleInvestCreate}\n                    sero={this.state.balanceSero}\n                    asnow={this.state.ct_details.asnowBalances}\n                    calcuPrincipalProfit={this.calcuPrincipalProfit}\n                    rate={this.state.ct_rate}\n                    lang={this.state.lang}\n                    times={this.state.ct_details.profitLevel}\n                    referId={this.state.ct_details.referId}\n                />\n\n                <BuyTicketForm\n                    wrappedComponentRef={this.saveBuyTicketFormRef}\n                    visible={this.state.showBuyTicket}\n                    onCancel={this.handleBuyTicketCancel}\n                    onCreate={this.handleBuyTicketCreate}\n                    asnow={this.state.balanceAsnow}\n                    lang={this.state.lang}\n                />\n\n            </div>\n        );\n    }\n}\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            locale: zhCN,\n        };\n    }\n\n    componentWillMount() {\n        let lang = localStorage.getItem(\"lang\");\n        let locale = zhCN;\n        if (lang) {\n            if (lang === \"zh_CN\") {\n                locale = zhCN;\n            } else if (lang === \"en_US\") {\n                locale = enUS;\n            }\n        } else {\n            locale = zhCN;\n            localStorage.setItem(\"lang\", \"zh_CN\");\n        }\n\n        this.setState({\n            locale: locale\n        })\n    }\n\n    changeLocale = e => {\n        const localeValue = e.target.value;\n        this.setState({locale: localeValue});\n        if (localeValue.locale === \"en\") {\n            localStorage.setItem(\"lang\", \"en_US\");\n        } else if (localeValue.locale === \"zh-cn\") {\n            localStorage.setItem(\"lang\", \"zh_CN\");\n        }\n    };\n\n    render() {\n        const {locale} = this.state;\n        return (\n            <div className=\"App\">\n                <Layout className=\"layout\">\n                    <ConfigProvider locale={locale}>\n                        <ContentPage key={locale ? locale.locale : 'en'}/>\n                    </ConfigProvider>\n                    <Footer style={{textAlign: 'center'}}/>\n                </Layout>\n            </div>\n        );\n    }\n}\n\nfunction convertUTCDate(dateTimestamp) {\n    if (dateTimestamp && dateTimestamp > 0) {\n        let cDate = new Date(dateTimestamp * 1000);\n        return appendZero(cDate.getMonth() + 1) + \"/\" + appendZero(cDate.getDate()) + \" \" + appendZero(cDate.getHours()) + \":\" + appendZero(cDate.getMinutes());\n    }\n    return \"\"\n}\n\nfunction nextShareTime() {\n    let d = new Date();\n    d.setTime(d.getTime() + 24 * 60 * 60 * 1000);\n    let year = d.getUTCFullYear();\n    let month = d.getUTCMonth();\n    let day = d.getUTCDate();\n    d = new Date(year, month, day, 0, 0, 0);\n\n    let tz = new Date().getTimezoneOffset() / 60;\n    return d.getTime() + (-tz) * 60 * 60 * 1000;\n}\n\nfunction appendZero(i) {\n    i = i < 10 ? \"0\" + i : i;\n    return i;\n}\n\nexport default App;\n\n","class Contract{\n\n    address = \"25CHRYtgyxS1juHEv5ERh3PyD4X2PZZF529fgWDTLYbZ1K187MAQf4rVk2cBMLnhNL1APH6i1rSt6HGZZE3c3c2s\";\n\n    abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"refereeCode\",\"type\":\"string\"}],\"name\":\"invest\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"detailsOfIncome\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"triggerStaticProfit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setMarketAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"details\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"registerNode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"conversionRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"calcuStaticProfit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"setSell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOfSero\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"code\",\"type\":\"string\"}],\"name\":\"codeExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"paymentAsnow\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_triggerStaticNum\",\"type\":\"uint256\"}],\"name\":\"setTriggerStaticNum\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOfAsnow\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyAsnow\",\"outputs\":[{\"name\":\"asnowAmount\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_marketAddr\",\"type\":\"address\"},{\"name\":\"_codeServiceAddr\",\"type\":\"address\"},{\"name\":\"_otherAddr\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}];\n\n}\n\nexport default Contract","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}